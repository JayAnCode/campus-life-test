{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\\\uC774\\uD574\\uC778\\\\Desktop\\\\campus-life-test\\\\src\\\\main\\\\webapp\\\\src\\\\components\\\\Questions\\\\Questions.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useContext } from \"react\";\nimport styled from 'styled-components';\nimport axios from \"axios\";\nimport { useHistory } from 'react-router-dom';\nimport ProgressBar from './ProgressBar';\nimport backImg from '../../image/Newbie_qu_background.png';\nimport QuestionsMobile from '../../image/m_question_bg.png';\nimport GlobalFonts from \"../fonts\";\nconst QuestionsImg = styled.div`\n    display: flex;\n    background-image: url(${backImg});\n    width: 100%;\n    min-height: 100%;\n    background-size: 100% 100%;\n    background-repeat: no-repeat;\n    justify-content: center;\n    align-items: center;\n\n    @media screen and (max-width: 500px) {\n        background-image: url(${QuestionsMobile});\n    }\n`;\n_c = QuestionsImg;\nconst QuestionsContainer = styled.div`\n    width: 400px;\n    object-fit: cover;\n    text-align: center;\n    justify-content: center;\n    align-items: center;\n    margin-top: 30px;\n    \n    @media screen and (max-width: 30%) {\n        height: 80%;\n        object-fit: cover;    \n    }\n`;\n_c2 = QuestionsContainer;\nconst QuestionWrapper = styled.div`\n    width: 100%;\n    justify-content: center;\n    align-items: center;\n    object-fit: cover;\n    margin: 60px 0px 57px 0px;\n    color: white;\n    font-size: 20px;\n    font-family: 'BMeU';\n    text-align: center;\n    text-shadow: 1px 1px gray;\n`;\n_c3 = QuestionWrapper;\nconst Text1Container = styled.div`\n    text-align: left;\n    font-family: 'BMeU';\n    font-size: 20px;\n    margin: 5px;\n    color: #001981;\n`;\n_c4 = Text1Container;\nconst Text2Container = styled.div`\n    font-family: 'BMeU';\n    text-align: right;\n    font-size: 20px;\n    margin-top: -25px;\n    color: #001981;\n`;\n_c5 = Text2Container;\nconst ButtonOptions = styled.button`\n    text-align: left;\n    color: #343434;\n    width: 400px;\n    height: 13vh;\n    border-radius: 35px;\n    background-color: white;\n    padding: 20px;\n    border: 2px solid white;\n    font-size: 20px;\n    font-family: 'BMeU';\n    margin: 0px 0px 30px 0px;\n    cursor: pointer;\n\n    &:focus {\n        outline:none;\n    }\n`;\n_c6 = ButtonOptions;\n\nfunction blueBackground(e) {\n  e.target.style.background = \"rgb(81,138,247)\";\n  e.target.style.color = \"white\";\n}\n\nfunction whiteBackground(e) {\n  e.target.style.background = \"white\";\n  e.target.style.color = \"rgb(17, 47, 56)\";\n}\n\nfunction Questions(props) {\n  _s();\n\n  const [questions, setQuestions] = useState(null); // test data\n\n  const [id, setId] = useState(0); // id\n\n  const [questChoice, setQuestChoice] = useState({\n    // 문항 선택 정보 저장 test\n    choice: ''\n  });\n  const [error, setError] = useState(false);\n  const [url, setUrl] = useState(null); //post data\n\n  const [local, setLocal] = useState(null);\n  const history = useHistory(); // questions 선택 항목 저장\n\n  const onQuetions = index => {\n    const choiceQuestion = index + 1;\n    setQuestChoice([...questChoice, choiceQuestion]);\n    setId(id + 1);\n    goResult();\n  }; // get questions\n\n\n  const fetchQuestions = async () => {\n    try {\n      // 요청이 시작 할 때에는 초기화\n      setError(null);\n      setQuestions(null);\n      setQuestChoice([0]);\n      setLocal('/result/0010');\n      const getResponse = await axios.get('http://localhost:8080/questions');\n      setQuestions(getResponse.data); // 데이터는 getResponse.data, setQuestions();\n    } catch (e) {\n      setError(e);\n    }\n  }; // post users (questions, college)\n\n\n  const postUsers = async () => {\n    try {\n      setError(null);\n      const postResponse = await axios.post('http://localhost:8080/result', {\n        choiceId: questChoice,\n        college: props.location.state.selectedOption\n      });\n      setUrl(postResponse.data); //url 저장\n    } catch (e) {\n      setError(e);\n    }\n  }; //components가 처음 렌더링 될 때 요청 \n\n\n  useEffect(() => {\n    fetchQuestions();\n    return () => {\n      postUsers();\n    };\n  }, []);\n  console.log(local);\n\n  const goResult = () => {\n    if (id >= 11) {\n      history.push({\n        pathname: url,\n        state: {\n          local: local\n        }\n      });\n    }\n  };\n\n  if (!questions) return null;\n  return /*#__PURE__*/_jsxDEV(QuestionsImg, {\n    children: [/*#__PURE__*/_jsxDEV(GlobalFonts, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(QuestionsContainer, {\n      children: [/*#__PURE__*/_jsxDEV(ProgressBar, {\n        bgcolor: \"#14276b\",\n        completed: id + 1\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Text1Container, {\n        children: \"\\uAC1C\\uAC15\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Text2Container, {\n        children: \"\\uC885\\uAC15\\u2764\\uFE0E\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(QuestionWrapper, {\n        children: questions[id].questionContent\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ButtonOptions, {\n        onMouseEnter: blueBackground,\n        onMouseLeave: whiteBackground,\n        onClick: () => onQuetions(0),\n        children: questions[id].choices[0].choiceContent\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ButtonOptions, {\n        onMouseEnter: blueBackground,\n        onMouseLeave: whiteBackground,\n        onClick: () => onQuetions(1),\n        children: questions[id].choices[1].choiceContent\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ButtonOptions, {\n        onMouseEnter: blueBackground,\n        onMouseLeave: whiteBackground,\n        onClick: () => onQuetions(2),\n        children: questions[id].choices[2].choiceContent\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ButtonOptions, {\n        onMouseEnter: blueBackground,\n        onMouseLeave: whiteBackground,\n        onClick: () => onQuetions(3),\n        children: questions[id].choices[3].choiceContent\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 166,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Questions, \"woPpGbrz9ubymI7kk5URk/99oZ4=\", false, function () {\n  return [useHistory];\n});\n\n_c7 = Questions;\nexport default Questions;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7;\n\n$RefreshReg$(_c, \"QuestionsImg\");\n$RefreshReg$(_c2, \"QuestionsContainer\");\n$RefreshReg$(_c3, \"QuestionWrapper\");\n$RefreshReg$(_c4, \"Text1Container\");\n$RefreshReg$(_c5, \"Text2Container\");\n$RefreshReg$(_c6, \"ButtonOptions\");\n$RefreshReg$(_c7, \"Questions\");","map":{"version":3,"sources":["C:/Users/이해인/Desktop/campus-life-test/src/main/webapp/src/components/Questions/Questions.js"],"names":["React","useState","useEffect","useContext","styled","axios","useHistory","ProgressBar","backImg","QuestionsMobile","GlobalFonts","QuestionsImg","div","QuestionsContainer","QuestionWrapper","Text1Container","Text2Container","ButtonOptions","button","blueBackground","e","target","style","background","color","whiteBackground","Questions","props","questions","setQuestions","id","setId","questChoice","setQuestChoice","choice","error","setError","url","setUrl","local","setLocal","history","onQuetions","index","choiceQuestion","goResult","fetchQuestions","getResponse","get","data","postUsers","postResponse","post","choiceId","college","location","state","selectedOption","console","log","push","pathname","questionContent","choices","choiceContent"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useContext } from \"react\";\r\nimport styled from 'styled-components';\r\nimport axios from \"axios\";\r\nimport { useHistory } from 'react-router-dom';\r\nimport ProgressBar from './ProgressBar';\r\nimport backImg from '../../image/Newbie_qu_background.png';\r\nimport QuestionsMobile from '../../image/m_question_bg.png';\r\nimport GlobalFonts from \"../fonts\"\r\n\r\nconst QuestionsImg = styled.div`\r\n    display: flex;\r\n    background-image: url(${backImg});\r\n    width: 100%;\r\n    min-height: 100%;\r\n    background-size: 100% 100%;\r\n    background-repeat: no-repeat;\r\n    justify-content: center;\r\n    align-items: center;\r\n\r\n    @media screen and (max-width: 500px) {\r\n        background-image: url(${QuestionsMobile});\r\n    }\r\n`;\r\n\r\nconst QuestionsContainer = styled.div`\r\n    width: 400px;\r\n    object-fit: cover;\r\n    text-align: center;\r\n    justify-content: center;\r\n    align-items: center;\r\n    margin-top: 30px;\r\n    \r\n    @media screen and (max-width: 30%) {\r\n        height: 80%;\r\n        object-fit: cover;    \r\n    }\r\n`;\r\n\r\nconst QuestionWrapper = styled.div`\r\n    width: 100%;\r\n    justify-content: center;\r\n    align-items: center;\r\n    object-fit: cover;\r\n    margin: 60px 0px 57px 0px;\r\n    color: white;\r\n    font-size: 20px;\r\n    font-family: 'BMeU';\r\n    text-align: center;\r\n    text-shadow: 1px 1px gray;\r\n`;\r\n\r\nconst Text1Container = styled.div`\r\n    text-align: left;\r\n    font-family: 'BMeU';\r\n    font-size: 20px;\r\n    margin: 5px;\r\n    color: #001981;\r\n`;\r\n\r\nconst Text2Container = styled.div`\r\n    font-family: 'BMeU';\r\n    text-align: right;\r\n    font-size: 20px;\r\n    margin-top: -25px;\r\n    color: #001981;\r\n`;\r\n\r\nconst ButtonOptions = styled.button`\r\n    text-align: left;\r\n    color: #343434;\r\n    width: 400px;\r\n    height: 13vh;\r\n    border-radius: 35px;\r\n    background-color: white;\r\n    padding: 20px;\r\n    border: 2px solid white;\r\n    font-size: 20px;\r\n    font-family: 'BMeU';\r\n    margin: 0px 0px 30px 0px;\r\n    cursor: pointer;\r\n\r\n    &:focus {\r\n        outline:none;\r\n    }\r\n`;\r\n\r\nfunction blueBackground(e) {\r\n    e.target.style.background = \"rgb(81,138,247)\";\r\n    e.target.style.color = \"white\";\r\n}\r\n\r\nfunction whiteBackground(e) {\r\n    e.target.style.background = \"white\";\r\n    e.target.style.color = \"rgb(17, 47, 56)\";\r\n}\r\n\r\nfunction Questions(props) {\r\n    const [questions, setQuestions] = useState(null); // test data\r\n    const [id, setId] = useState(0); // id\r\n    const [questChoice, setQuestChoice] = useState({ // 문항 선택 정보 저장 test\r\n        choice: ''\r\n    })\r\n    const [error, setError] = useState(false);\r\n    const [url, setUrl] = useState(null); //post data\r\n    const [local, setLocal] = useState(null);\r\n    const history = useHistory();\r\n\r\n    // questions 선택 항목 저장\r\n    const onQuetions = (index) => {\r\n        const choiceQuestion = index + 1;\r\n        setQuestChoice([...questChoice,choiceQuestion]);\r\n        setId(id + 1);\r\n        goResult();\r\n    };\r\n\r\n    // get questions\r\n    const fetchQuestions = async () => {\r\n        try {\r\n            // 요청이 시작 할 때에는 초기화\r\n            setError(null);\r\n            setQuestions(null);\r\n            setQuestChoice([0]);\r\n            setLocal('/result/0010');\r\n            const getResponse = await axios.get('http://localhost:8080/questions');\r\n            setQuestions(getResponse.data); // 데이터는 getResponse.data, setQuestions();\r\n        } catch (e) {\r\n            setError(e);\r\n        }\r\n    };\r\n\r\n    // post users (questions, college)\r\n    const postUsers = async () => {\r\n        try {\r\n            setError(null);\r\n            const postResponse = await axios.post('http://localhost:8080/result', {\r\n                choiceId: questChoice,\r\n                college : props.location.state.selectedOption\r\n            });\r\n            setUrl(postResponse.data); //url 저장\r\n        } catch (e) {\r\n            setError(e);\r\n        }\r\n    }\r\n\r\n    //components가 처음 렌더링 될 때 요청 \r\n    useEffect(() => {\r\n        fetchQuestions();\r\n        return () => {\r\n            postUsers();\r\n        };\r\n    }, [])\r\n    console.log(local);\r\n\r\n    const goResult = () => {\r\n        if (id >= 11) {\r\n            history.push({\r\n                pathname: url,\r\n                state: {local: local}\r\n            });\r\n        }\r\n    };\r\n\r\n    if (!questions) return null;\r\n\r\n    return (\r\n        <QuestionsImg>\r\n            <GlobalFonts />\r\n            <QuestionsContainer >\r\n                <ProgressBar bgcolor=\"#14276b\" completed={id+1} />\r\n                <Text1Container>개강</Text1Container>\r\n                <Text2Container>종강❤︎</Text2Container>\r\n                <QuestionWrapper >{questions[id].questionContent}</QuestionWrapper>\r\n                <ButtonOptions onMouseEnter={blueBackground} onMouseLeave={whiteBackground} onClick={() => onQuetions(0)} >{questions[id].choices[0].choiceContent}</ButtonOptions>\r\n                <ButtonOptions onMouseEnter={blueBackground} onMouseLeave={whiteBackground} onClick={() =>onQuetions(1)} >{questions[id].choices[1].choiceContent}</ButtonOptions>\r\n                <ButtonOptions onMouseEnter={blueBackground} onMouseLeave={whiteBackground} onClick={() =>onQuetions(2)} >{questions[id].choices[2].choiceContent}</ButtonOptions>\r\n                <ButtonOptions onMouseEnter={blueBackground} onMouseLeave={whiteBackground} onClick={() =>onQuetions(3)} >{questions[id].choices[3].choiceContent}</ButtonOptions>\r\n            </QuestionsContainer>\r\n        </QuestionsImg>\r\n    )\r\n}\r\nexport default Questions;\r\n"]},"metadata":{},"sourceType":"module"}